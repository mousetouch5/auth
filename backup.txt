@{
    ViewData["Title"] = "Chat";
}

<h2>Chat with <span id="friendName"></span></h2>
<a href="@Url.Action("FriendsHub", "Chats")">â¬… Back to Friends</a>

<div id="chat-box"
    style="border:1px solid #ccc; height:400px; overflow-y:scroll; padding:10px; display:flex; flex-direction:column;">
    <!-- Messages will load here -->
</div>

<input type="hidden" id="friendId" value="@ViewBag.FriendId" />
<input type="hidden" id="userId" value="@ViewBag.UserId" />

<div>
    <textarea id="messageContent" placeholder="Type a message..." style="width:80%;"></textarea>
    <button onclick="sendMessage()">Send</button>
</div>

<script>
    document.getElementById("friendName").textContent = "@ViewBag.FriendName";
</script>

<style>
    .message {
        padding: 10px;
        margin: 8px;
        border-radius: 15px;
        max-width: 70%;
        position: relative;
    }

    .me {
        background: #dcf8c6;
        align-self: flex-end;
        text-align: right;
        border-bottom-right-radius: 5px;
        /* Creates a tail effect */
    }

    .friend {
        background: #e3e3e3;
        align-self: flex-start;
        text-align: left;
        border-bottom-left-radius: 5px;
        /* Creates a tail effect */
    }
</style>

<script>
    const userId = document.getElementById("userId").value;
    const friendId = document.getElementById("friendId").value;
    let lastTimestamp = null;

    function loadMessages() {
        fetch(`/Chats/GetMessages?friendId=${friendId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(messages => {
                console.log("Messages received:", messages);
                const chatBox = document.getElementById("chat-box");
                chatBox.innerHTML = "";

                // Add debugging to check values
                console.log("Current userId:", userId);

                messages.reverse().forEach(msg => {
                    console.log("Message senderId:", msg.senderId);
                    let isMine = msg.senderId === userId;
                    console.log("Is mine?", isMine);

                    let senderName = isMine ? "You" : document.getElementById("friendName").textContent;

                    let msgDiv = document.createElement("div");
                    msgDiv.classList.add("message", isMine ? "me" : "friend");
                    msgDiv.innerHTML = `<b>${senderName}:</b> ${msg.content}`;
                    chatBox.appendChild(msgDiv);
                });

                chatBox.scrollTop = chatBox.scrollHeight;
                if (messages.length) {
                    lastTimestamp = messages[messages.length - 1].timestamp;
                }
            })
            .catch(error => console.error("Error fetching messages:", error));
    }




    function sendMessage() {
        const content = document.getElementById("messageContent").value.trim();
        if (!content) return;

        const messageData = {
            receiverId: friendId,
            content: content
        };

        console.log("Sending message:", messageData);

        fetch('/Chats/SendMessage', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(messageData)
        })
            .then(response => {
                console.log("Response status:", response.status);
                return response.json();
            })
            .then(data => {
                console.log("Message sent response:", data);
                if (data.error) {
                    console.error("Server error:", data.error);
                } else {
                    document.getElementById("messageContent").value = "";
                    loadMessages();
                }
            })
            .catch(error => console.error("Error sending message:", error));
    }


    setInterval(loadMessages, 3000);
    loadMessages();
</script>
